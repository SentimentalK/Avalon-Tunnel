services:
  manager:
    build:
      context: .
      dockerfile: docker/Dockerfile.manager
      network: host
    container_name: avalon-manager
    volumes:
      - .:/app/config
      - ./data:/app/config/data
    environment:
      - DOMAIN=${DOMAIN:-your-domain.com}
      - SECRET_PATH=${SECRET_PATH:-}
      - ACME_STAGING=${ACME_STAGING:-0}
      - BASE_DIR=/app/config
    env_file:
      - .env
    profiles:
      - tools

  v2ray:
    image: v2fly/v2fly-core:latest
    container_name: avalon-v2ray
    restart: unless-stopped
    volumes:
      - ./config.json:/etc/v2ray/config.json:ro
    network_mode: host
    command: ["run", "-c", "/etc/v2ray/config.json"]

  caddy:
    image: caddy:2-alpine
    container_name: avalon-caddy
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./public:/srv:ro
      - ./data/caddy/data:/data
      - ./data/caddy/config:/config
    depends_on:
      - v2ray
    environment:
      - DOMAIN=${DOMAIN:-your-domain.com}

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
      network: host
    container_name: avalon-api
    restart: unless-stopped
    network_mode: host
    volumes:
      - .:/app/config
      - ./data:/app/config/data
      - ./scripts:/app/config/scripts
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOMAIN=${DOMAIN:-your-domain.com}
      - BASE_DIR=/app/config
    env_file:
      - .env
    profiles:
      - api  # 不自动启动，在核心服务验证通过后再启动
